package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for setreversedspins kernel
var setreversedspins_code cu.Function

// Stores the arguments for setreversedspins kernel invocation
type setreversedspins_args_t struct {
	arg_s   unsafe.Pointer
	arg_mx  unsafe.Pointer
	arg_my  unsafe.Pointer
	arg_mz  unsafe.Pointer
	arg_Nx  int
	arg_Ny  int
	arg_Nz  int
	arg_PBC byte
	argptr  [8]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for setreversedspins kernel invocation
var setreversedspins_args setreversedspins_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	setreversedspins_args.argptr[0] = unsafe.Pointer(&setreversedspins_args.arg_s)
	setreversedspins_args.argptr[1] = unsafe.Pointer(&setreversedspins_args.arg_mx)
	setreversedspins_args.argptr[2] = unsafe.Pointer(&setreversedspins_args.arg_my)
	setreversedspins_args.argptr[3] = unsafe.Pointer(&setreversedspins_args.arg_mz)
	setreversedspins_args.argptr[4] = unsafe.Pointer(&setreversedspins_args.arg_Nx)
	setreversedspins_args.argptr[5] = unsafe.Pointer(&setreversedspins_args.arg_Ny)
	setreversedspins_args.argptr[6] = unsafe.Pointer(&setreversedspins_args.arg_Nz)
	setreversedspins_args.argptr[7] = unsafe.Pointer(&setreversedspins_args.arg_PBC)
}

// Wrapper for setreversedspins CUDA kernel, asynchronous.
func k_setreversedspins_async(s unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Nx int, Ny int, Nz int, PBC byte, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("setreversedspins")
	}

	setreversedspins_args.Lock()
	defer setreversedspins_args.Unlock()

	if setreversedspins_code == 0 {
		setreversedspins_code = fatbinLoad(setreversedspins_map, "setreversedspins")
	}

	setreversedspins_args.arg_s = s
	setreversedspins_args.arg_mx = mx
	setreversedspins_args.arg_my = my
	setreversedspins_args.arg_mz = mz
	setreversedspins_args.arg_Nx = Nx
	setreversedspins_args.arg_Ny = Ny
	setreversedspins_args.arg_Nz = Nz
	setreversedspins_args.arg_PBC = PBC

	args := setreversedspins_args.argptr[:]
	cu.LaunchKernel(setreversedspins_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("setreversedspins")
	}
}

// maps compute capability on PTX code for setreversedspins kernel.
var setreversedspins_map = map[int]string{0: "",
	75:  setreversedspins_ptx_75,
	80:  setreversedspins_ptx_80,
	86:  setreversedspins_ptx_86,
	87:  setreversedspins_ptx_87,
	89:  setreversedspins_ptx_89,
	90:  setreversedspins_ptx_90,
	100: setreversedspins_ptx_100,
	120: setreversedspins_ptx_120}

// setreversedspins PTX code for various compute capabilities.
const (
	setreversedspins_ptx_75 = `
.version 8.8
.target sm_75
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_80 = `
.version 8.8
.target sm_80
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_86 = `
.version 8.8
.target sm_86
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_87 = `
.version 8.8
.target sm_87
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_89 = `
.version 8.8
.target sm_89
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_90 = `
.version 8.8
.target sm_90
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 setreversedspins_param_0,
	.param .u64 setreversedspins_param_1,
	.param .u64 setreversedspins_param_2,
	.param .u64 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r5, [setreversedspins_param_5];
	ld.param.u32 	%r6, [setreversedspins_param_6];
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r11, %r10, %r12;
	mov.u32 	%r13, %ntid.z;
	mov.u32 	%r14, %ctaid.z;
	mov.u32 	%r15, %tid.z;
	mad.lo.s32 	%r3, %r14, %r13, %r15;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r2, %r5;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r3, %r6;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;

	cvta.to.global.u64 	%rd6, %rd5;
	mad.lo.s32 	%r16, %r3, %r5, %r2;
	mad.lo.s32 	%r17, %r16, %r4, %r1;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r17, 4;
	add.s64 	%rd9, %rd7, %rd8;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd8;
	add.s64 	%rd12, %rd6, %rd8;
	ld.global.nc.f32 	%f2, [%rd9];
	ld.global.nc.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	ld.global.nc.f32 	%f1, [%rd12];
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.eq.f32 	%p6, %f6, 0f00000000;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd1, %rd13, %rd8;
	@%p6 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_2;

$L__BB0_5:
	mov.u32 	%r20, 0;
	st.global.u32 	[%rd1], %r20;
	bra.uni 	$L__BB0_6;

$L__BB0_2:
	setp.gt.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;

$L__BB0_4:
	mov.u32 	%r19, 0;
	st.global.u32 	[%rd1], %r19;
	bra.uni 	$L__BB0_6;

$L__BB0_3:
	mov.u32 	%r18, -1082130432;
	st.global.u32 	[%rd1], %r18;

$L__BB0_6:
	ret;

}

`
	setreversedspins_ptx_100 = `
.version 8.8
.target sm_100
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 .ptr .align 1 setreversedspins_param_0,
	.param .u64 .ptr .align 1 setreversedspins_param_1,
	.param .u64 .ptr .align 1 setreversedspins_param_2,
	.param .u64 .ptr .align 1 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<25>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<20>;

	ld.param.u64 	%rd6, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r6, [setreversedspins_param_5];
	ld.param.u32 	%r7, [setreversedspins_param_6];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ctaid.z;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r19, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r15, %r6;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r19, %r7;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;
	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd8, %rd4;
	cvta.to.global.u64 	%rd9, %rd5;
	mad.lo.s32 	%r20, %r6, %r19, %r15;
	mad.lo.s32 	%r21, %r20, %r4, %r1;
	cvt.s64.s32 	%rd2, %r21;
	mul.wide.s32 	%rd10, %r21, 4;
	add.s64 	%rd11, %rd7, %rd10;
	ld.global.nc.f32 	%f2, [%rd11];
	add.s64 	%rd12, %rd8, %rd10;
	ld.global.nc.f32 	%f3, [%rd12];
	add.s64 	%rd13, %rd9, %rd10;
	ld.global.nc.f32 	%f1, [%rd13];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.neu.f32 	%p6, %f6, 0f00000000;
	@%p6 bra 	$L__BB0_3;
	shl.b64 	%rd18, %rd2, 2;
	add.s64 	%rd19, %rd1, %rd18;
	mov.b32 	%r24, 0;
	st.global.u32 	[%rd19], %r24;
	bra.uni 	$L__BB0_6;
$L__BB0_3:
	setp.leu.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_5;
	shl.b64 	%rd16, %rd2, 2;
	add.s64 	%rd17, %rd1, %rd16;
	mov.b32 	%r23, 0;
	st.global.u32 	[%rd17], %r23;
	bra.uni 	$L__BB0_6;
$L__BB0_5:
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd1, %rd14;
	mov.b32 	%r22, -1082130432;
	st.global.u32 	[%rd15], %r22;
$L__BB0_6:
	ret;

}
`
	setreversedspins_ptx_120 = `
.version 8.8
.target sm_120
.address_size 64

	// .globl	setreversedspins

.visible .entry setreversedspins(
	.param .u64 .ptr .align 1 setreversedspins_param_0,
	.param .u64 .ptr .align 1 setreversedspins_param_1,
	.param .u64 .ptr .align 1 setreversedspins_param_2,
	.param .u64 .ptr .align 1 setreversedspins_param_3,
	.param .u32 setreversedspins_param_4,
	.param .u32 setreversedspins_param_5,
	.param .u32 setreversedspins_param_6,
	.param .u8 setreversedspins_param_7
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<25>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<20>;

	ld.param.u64 	%rd6, [setreversedspins_param_0];
	ld.param.u64 	%rd3, [setreversedspins_param_1];
	ld.param.u64 	%rd4, [setreversedspins_param_2];
	ld.param.u64 	%rd5, [setreversedspins_param_3];
	ld.param.u32 	%r4, [setreversedspins_param_4];
	ld.param.u32 	%r6, [setreversedspins_param_5];
	ld.param.u32 	%r7, [setreversedspins_param_6];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r15, %r12, %r13, %r14;
	mov.u32 	%r16, %ctaid.z;
	mov.u32 	%r17, %ntid.z;
	mov.u32 	%r18, %tid.z;
	mad.lo.s32 	%r19, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r4;
	setp.ge.s32 	%p2, %r15, %r6;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32 	%p4, %r19, %r7;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;
	cvta.to.global.u64 	%rd7, %rd3;
	cvta.to.global.u64 	%rd8, %rd4;
	cvta.to.global.u64 	%rd9, %rd5;
	mad.lo.s32 	%r20, %r6, %r19, %r15;
	mad.lo.s32 	%r21, %r20, %r4, %r1;
	cvt.s64.s32 	%rd2, %r21;
	mul.wide.s32 	%rd10, %r21, 4;
	add.s64 	%rd11, %rd7, %rd10;
	ld.global.nc.f32 	%f2, [%rd11];
	add.s64 	%rd12, %rd8, %rd10;
	ld.global.nc.f32 	%f3, [%rd12];
	add.s64 	%rd13, %rd9, %rd10;
	ld.global.nc.f32 	%f1, [%rd13];
	mul.f32 	%f4, %f3, %f3;
	fma.rn.f32 	%f5, %f2, %f2, %f4;
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	setp.neu.f32 	%p6, %f6, 0f00000000;
	@%p6 bra 	$L__BB0_3;
	shl.b64 	%rd18, %rd2, 2;
	add.s64 	%rd19, %rd1, %rd18;
	mov.b32 	%r24, 0;
	st.global.u32 	[%rd19], %r24;
	bra.uni 	$L__BB0_6;
$L__BB0_3:
	setp.leu.f32 	%p7, %f1, 0f00000000;
	@%p7 bra 	$L__BB0_5;
	shl.b64 	%rd16, %rd2, 2;
	add.s64 	%rd17, %rd1, %rd16;
	mov.b32 	%r23, 0;
	st.global.u32 	[%rd17], %r23;
	bra.uni 	$L__BB0_6;
$L__BB0_5:
	shl.b64 	%rd14, %rd2, 2;
	add.s64 	%rd15, %rd1, %rd14;
	mov.b32 	%r22, -1082130432;
	st.global.u32 	[%rd15], %r22;
$L__BB0_6:
	ret;

}
`
)
